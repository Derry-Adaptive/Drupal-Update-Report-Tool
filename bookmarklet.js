javascript:(function(){if(!window._excludedModules)window._excludedModules=new Set();const excludedModules=window._excludedModules;function cleanText(text){return text?text.replace(/<a[^>]*>|<\/a>/g,"").replace(/\(Release notes\)/gi,"").replace(/\s+/g," ").trim():""}function cleanVersion(version){return version.replace(/^8\.x-/,"").trim()}function escapeCSVValue(value){if(!value)return'""';const str=String(value).replace(/"/g,'""');return`"${str}"`}function isModuleExcluded(machine,human){const lowerHuman=human.toLowerCase();for(let pattern of excludedModules){if(pattern.includes("*")){const regex=new RegExp(pattern.replace(/\*/g,".*"),"i");if(regex.test(machine)||regex.test(lowerHuman))return!0}else if(pattern===machine||pattern===lowerHuman)return!0}return!1}function extractModuleNames(cell){if(!cell)return{machine:"",human:""};const link=cell.querySelector("a[href*='drupal.org/project/']");let machine="";if(link){const match=link.getAttribute("href").match(/project\/([^/]+)/);if(match)machine=match[1].toLowerCase()}let tempCell=cell.cloneNode(!0);tempCell.querySelectorAll("div").forEach(div=>div.remove());let human=cleanText(tempCell.textContent);return{machine,human}}function extractTableData(table,targetArray,isCore=!1,filter="all"){if(!table)return;table.querySelectorAll("tbody tr").forEach(row=>{const cells=row.querySelectorAll("td");if(!cells.length)return;let nameCell=cells[isCore?0:1],{machine,human}=extractModuleNames(nameCell),from=cleanVersion(cleanText(cells[isCore?1:2]?.textContent||"")),to=cleanVersion(cleanText(cells[isCore?2:3]?.textContent||"")),isExcluded=isModuleExcluded(machine,human);if("excluded"===filter&&!isExcluded||"excluded"!==filter&&isExcluded)return;if(machine&&human&&from&&to&&from!==to)targetArray.push([machine,human,from,to])})}function generateCSV(all){const rows=[["Module Name","Installed Version","Recommended Version"],...all.map(r=>[r[1],r[2],r[3]])],csvContent=rows.map(row=>row.map(escapeCSVValue).join(",")).join("\n"),blob=new Blob([csvContent],{type:"text/csv"}),a=document.createElement("a");a.href=URL.createObjectURL(blob),a.download=`drupal-updates-${new Date().toISOString().split("T")[0]}.csv`,document.body.appendChild(a),a.click(),document.body.removeChild(a),console.log("✅ CSV report downloaded successfully.")}window.generateUpdateReport=function(action="csv",filter="all"){if("help"===action){console.log(`\n🔧 generateUpdateReport([type], [scope]) — Drupal Module Update Helper\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📦 TYPE (output format)\n  "csv"         → Download a CSV file of available updates\n  "ascii"       → Output a clean table to the console\n  "commit"      → Print commit message summary\n  "composer"    → Output a 'composer require' command\n\n🎯 SCOPE (optional filter)\n  "all"         → Include all available updates (default)\n  "security"    → Limit output to security updates only\n  "excluded"    → Only show modules marked as excluded\n\n📌 USAGE\n  generateUpdateReport("ascii")                  → All updates\n  generateUpdateReport("csv", "security")        → Security-only CSV\n  generateUpdateReport("composer")               → Composer command for all\n\n🚫 EXCLUDE MODULES\n  generateUpdateReport("add_exclude", "token")      → Exclude modules matching "token"\n  generateUpdateReport("add_exclude", "admin")      → Match by part of name or project URL\n  generateUpdateReport("remove_exclude", "admin")   → Remove exclusion\n  generateUpdateReport("exclude_list")              → View current exclude filters\n\n💡 TIPS\n  • Excludes match module name and drupal.org/project/* path (case-insensitive)\n  • Partial names and patterns like "media", "admin", "views" are supported\n  • Filters are stored only in memory (browser tab session)\n  • Run after exclusions: generateUpdateReport("ascii") or ("composer")\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n`);return}let core=[],contrib=[];extractTableData(document.querySelector("#edit-manual-updates"),core,!0,filter);extractTableData(document.querySelector("#edit-projects, .update"),contrib,!1,filter);const all=[...core,...contrib];if(!all.length)return console.log("⚠️ No updates found.");"csv"===action&&generateCSV(all)};generateUpdateReport("help")})();
